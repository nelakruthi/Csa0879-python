import math

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return abs(a * b) // gcd(a, b)

def find_lcm_of_list(numbers):
    lcm_result = numbers[0]
    for num in numbers[1:]:
        lcm_result = lcm(lcm_result, num)
    return lcm_result

def find_gcd_of_list(numbers):
    gcd_result = numbers[0]
    for num in numbers[1:]:
        gcd_result = gcd(gcd_result, num)
    return gcd_result


def main():
    try:
        N = int(input("Enter the number of elements: "))
        if N <= 0:
            raise ValueError("Number of elements should be a positive integer.")
        
        numbers = []
        for i in range(1, N + 1):
            number = int(input(f"Enter Number {i}: "))
            numbers.append(number)
        
        lcm_result = find_lcm_of_list(numbers)
        gcd_result = find_gcd_of_list(numbers)
        
        print(f"LCM = {lcm_result}")
        print(f"GCD = {gcd_result}")
    
    except ValueError as ve:
        print(f"Error: {ve}")
    except Exception as e:
        print(f"Error: {e}")

if _name_ == "_main_":
    main()
